load_module /usr/lib/nginx/modules/ngx_stream_module.so;
worker_processes auto;
error_log /etc/error_log;

events {
}

http {
    types {
        image/png png;
        image/x-icon ico;
        image/x-jng jng;

        image/gif gif;
        image/jpeg jpeg jpg;
        image/vnd.wap.wbmp wbmp;
        text/plain txt;
    }
    include /etc/nginx/proxy.conf;

    sendfile on;
    tcp_nopush off;
    tcp_nodelay on;
    #our files are small enough, i don't think we need to put them into a buffer
    # no delay should be, 200ms delay is too costly for us.
    index return 500;
    server {
        listen 1121 http2 ssl;


        ssl_certificate certificate.crt ;
        ssl_certificate_key private.key;
        ssl_protocols TLSv1.3 TLSv1.2;
        server_name images1.iitm.ac.in;

        add_header Access-Control-Allow-Origin "students.iitm.ac.in";

        root /usr/local;

        location / {
        }

        server {
            listen 1221 http2 ssl;


            ssl_certificate certificate.crt ;
            ssl_certificate_key private.key;
            ssl_protocols TLSv1.3 TLSv1.2;
            server_name images1.iitm.ac.in;

            add_header Access-Control-Allow-Origin "students.iitm.ac.in";

            root /usr/local;

            location /app1 {
                proxy_pass http://127.0.0.1:3001;
                # these can be fastify, express servers
            }

            location /app2 {
                proxy_pass http://127.0.0.1:3002;
                # these can be fastify, express servers
            }


        }
        server {
            listen 1222 http2 ssl;


            ssl_certificate certificate.crt ;
            ssl_certificate_key private.key;
            ssl_protocols TLSv1.3 TLSv1.2;
            server_name images2.iitm.ac.in;


            add_header Access-Control-Allow-Origin "students.iitm.ac.in";
            root /usr/local;
            location / {

            }
        }
        server {
            listen 1223 http2 ssl;


            ssl_certificate certificate.crt ;
            ssl_certificate_key private.key;
            ssl_protocols TLSv1.3 TLSv1.2;
            server_name images3.iitm.ac.in;


            add_header Access-Control-Allow-Origin "students.iitm.ac.in";
            root /usr/local;
            location / {

            }
        }
        server {
            listen 1224 http2 ssl;


            ssl_certificate certificate.crt ;
            ssl_certificate_key private.key;
            ssl_protocols TLSv1.3 TLSv1.2;
            server_name images4.iitm.ac.in;


            add_header Access-Control-Allow-Origin "students.iitm.ac.in";
            root /usr/local;
            location / {
            }
        }
    }


    #layer 4 load balancer using the default round robin algorithm
    stream {
        upstream app_node {
            server :1221 weight=3;
            server :1222;
            server :1223;
            server :1224;
        }

        server {
            listen 1111;
            proxy_pass app_node;
        }
    }